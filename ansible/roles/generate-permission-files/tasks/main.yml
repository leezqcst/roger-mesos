---

  # If creds_dir var is passed, then we don't need to create a temp dir
  - name: Create a temp dir for local permissions file
    shell: mktemp -d
    delegate_to: 127.0.0.1
    always_run: yes # run during check mode
    when: (creds_dir is not defined) or (creds_dir | trim == '')
    run_once: yes
    register: mktemp
    notify: clean mktemp
    tags:
      - nginx
      - configuration
      - plugin
      - permissions
      - permissions-sync
      - permissions-gen

  - name: Assign credentials temp dir if not passed through
    set_fact:
      creds_dir: "{{ mktemp.stdout }}"
    when: (creds_dir is not defined) or (creds_dir | trim == '')
    become: yes
    tags:
      - install
      - nginx
      - configuration
      - plugin
      - permissions
      - permissions-sync
      - permissions-gen

  - debug: msg="Created a temp dir. If the playbook fails, please delete this directory using -> rm -r {{ creds_dir }}"
    always_run: yes # run during check mode
    run_once: yes
    tags:
      - configuration
      - plugin
      - permissions
      - permissions-sync
      - permissions-gen
      - nginx

  - name: Install python-pip package
    apt: name=python-pip state=present
    become: yes
    always_run: yes # run during check mode
    tags:
      - configuration
      - plugin
      - permissions
      - permissions-sync
      - permissions-gen
      - nginx

  - name: install python packages
    pip: name={{ item }} state=present
    become: yes
    always_run: yes # run during check mode
    with_items:
       - pyyaml
    tags:
      - configuration
      - plugin
      - permissions
      - permissions-sync
      - permissions-gen
      - nginx

  - name: install python packages using pip locally
    pip: name={{ item }} virtualenv={{ creds_dir }}/venv
    always_run: yes # run during check mode
    with_items:
       - htpasswd
       - PyYAML
    delegate_to: 127.0.0.1
    run_once: yes
    become: no
    tags:
      - configuration
      - plugin
      - permissions
      - permissions-sync
      - permissions-gen
      - nginx

  - name: Generate nginx basic auth file if generate_basic_auth_file is set && it requires permissions file locally
    when: generate_basic_auth_file is defined and generate_basic_auth_file|bool
    shell: "{{ creds_dir }}/venv/bin/python {{ role_path }}/files/generate_nginx_basic_auth_file.py {{ nginx_auth_local_dir }}/{% if env_name is defined and env_name == \"local\" %}permissions_{{ env_name }}.yml{% else %}permissions.yml{% endif %} {{ creds_dir }}/{{ nginx_basic_auth_file_name }}"
    delegate_to: 127.0.0.1
    always_run: yes # run during check mode
    run_once: yes
    become: no
    tags:
      - configuration
      - permissions
      - permissions-sync
      - permissions-gen
      - nginx


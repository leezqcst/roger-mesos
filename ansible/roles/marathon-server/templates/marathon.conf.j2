description "Marathon scheduler for Mesos"

start on runlevel [2345]
stop on runlevel [!2345]

respawn
respawn limit 10 5

{% if (marathon_password is defined) and not(marathon_password | trim == '') %}env MESOSPHERE_HTTP_CREDENTIALS="{{ marathon_username }}:{{ marathon_password }}"{% endif %}

{% if (ssl_keystore_pass is defined) and not(ssl_keystore_pass | trim =='') %}
env MESOSPHERE_KEYSTORE_PATH={{ ssl_keystore_path }}
env MESOSPHERE_KEYSTORE_PASS={{ ssl_keystore_pass }}
{% endif %}

pre-start script

  iptables -C INPUT -p tcp --dport {{ marathon_http_port }} -s localhost -j ACCEPT || iptables -A INPUT -p tcp --dport {{ marathon_http_port }} -s localhost -j ACCEPT
  {% for host in groups['marathon_servers'] %}
  iptables -C INPUT -p tcp --dport {{ marathon_http_port }} -s {{ host }} -j ACCEPT || iptables -A INPUT -p tcp --dport {{ marathon_http_port }} -s {{ host }} -j ACCEPT
  {% endfor %}
  iptables -C INPUT -p tcp --dport {{ marathon_http_port }} -j REJECT || iptables -A INPUT -p tcp --dport {{ marathon_http_port }} -j REJECT

end script

exec /usr/bin/marathon {% if (ssl_keystore_pass is defined) and not(ssl_keystore_pass | trim =='') %}--disable_http{% endif %}

post-start script
  sleep 60
  curl -X POST -H "Content-Type: application/x-www-form-urlencoded" -u {{ marathon_admin_user }}:{{ marathon_admin_password }} --data "logger=mesosphere.marathon.example&level=OFF" http://{{ marathon_webui_host }}/logging
end script


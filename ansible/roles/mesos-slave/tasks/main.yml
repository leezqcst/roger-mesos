- name: Check for cgroup memory and swap accounting parameter
  command: "grep 'GRUB_CMDLINE_LINUX_DEFAULT=\"cgroup_enable=memory swapaccount=1 transparent_hugepage=never\"' /etc/default/grub"
  tags:
    - checks

- name: Create host independent directories which need to exist, if necessary
  file: path={{item}} state=directory owner=root
  with_items:
    - "{{ mesos_slave_config_dir }}"
  become: yes
  tags:
    - mesos-core
    - configuration

- name: Create link to shared mount (if defined)
  file: src={{ shared_mount }} dest={{ common_mount_dir }} state=link
  become: yes
  when: shared_mount is defined and common_mount_dir is defined
  tags:
    - shared-link

- name: Disable mesos master
  when: inventory_hostname not in groups.masters
  service: name=mesos-master state=stopped
  become: yes
  tags:
    - mesos-core
    - configuration

- name: Prevent mesos master daemon from starting at system startup
  when: inventory_hostname not in groups.masters
  template: src=service_override.j2 dest=/etc/init/mesos-master.override owner=root group=root mode=0644
  become: yes
  tags:
    - mesos-core
    - configuration

- name: Remove unused config files
  file: path={{item}} state=absent
  with_items: mesos_slave_config_files_to_delete
  become: yes
  tags:
    - mesos-core
    - configuration

- name: Update package repo cache
  apt: update_cache=yes
  become: yes
  tags:
    - packages
    - update_cache

# This will cause the slave to unregister and quit.  Upstart will restart it
# but it will be stopped again by 'Stop mesos-slave' below.

- name: Send SIGUSR1 to mesos-slave
  when: inventory_hostname in groups.docker_machines and
        not which_docker.failed and
        current_docker_version.stdout.find("Docker version") != -1 and
        current_docker_version.stdout.find("Docker version {{ docker_version_to_use }},") == -1
  shell: "pkill -USR1 mesos-slave || true"
  become: yes
  tags:
    - mesos-core

- name: Stop mesos-slave
  when: inventory_hostname in groups.slaves and
        not which_docker.failed and
        current_docker_version.stdout.find("Docker version") != -1 and
        current_docker_version.stdout.find("Docker version {{ docker_version_to_use }},") == -1
  service: name=mesos-slave state=stopped
  notify: restart mesos-slave
  become: yes
  tags:
    - mesos-core

- name: Configure Mesos Slave commandline flags
  template: src=mesos-slave-flags/{{item}}.j2 dest={{mesos_slave_config_dir}}/{{item}} owner=root group=root mode=0644
  with_items: mesos_slave_args_files
  become: yes
  notify: restart mesos-slave
  tags:
    - configuration
    - mesos-core
    - mesos-slave-flags

---
  - name: Remove any existing NGINX under "/usr/local"
    file: path="{{ nginx_previous_version_dir }}" state=absent
    become: yes
    tags:
      - nginx

  - name: Download openresty/nginx bundle
    get_url: url="{{nginx_release_url}}" dest="{{tmp_dir}}"
    become: yes
    tags:
      - install
      - nginx

  - name: Untar nginx package
    unarchive: copy=no dest="{{tmp_dir}}" src="{{tmp_dir}}/{{nginx_pkg_tar}}"
    become: yes
    tags:
      - install
      - nginx

  - name: Install nginx dependencies
    apt: name={{ item }} state=present
    with_items: "{{ nginx_package_deps }}"
    become: yes
    tags:
      - packages
      - nginx

  - name: configure and install nginx with auth_request module
    command: chdir={{tmp_dir}}/{{nginx_pkg}} {{item}}
    with_items:
      - ./configure --with-http_auth_request_module --with-stream --with-stream_ssl_module
      - make
      - make install
    become: yes
    tags:
      - install
      - nginx

  - name: Create directories which need to exist if necessary
    file: path={{ item }} state=directory owner=root
    with_items:
      - "{{ nginx_conf_dir }}"
      - "{{ nginx_certs_dir }}"
      - "{{ nginx_chronos_auth_dir }}"
      - "{{ nginx_chronos_auth_views_dir }}"
      - "{{ nginx_chronos_auth_templates_dir }}"
      - "{{ nginx_auth_login_dir }}"
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    tags:
      - install
      - nginx
      - login

  - name: Synchronize login pages
    synchronize: src=login/ dest={{ nginx_auth_login_dir }} recursive=yes delete=yes
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - login

  - name: Synchronize Chronos overridden view files
    synchronize: src=chronos_overrides/views/ dest={{ nginx_chronos_auth_views_dir }} recursive=yes delete=yes
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx

  - name: Copy Lua Auth Script file
    copy: src=../files/auth_request.lua dest={{ nginx_auth_script_dir }} mode=0644
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    tags:
      - install
      - nginx
      - lua

  - name: Copy Lua Auth and Filter Response Script file
    copy: src=../files/auth_request_and_filter_response.lua dest={{ nginx_auth_script_dir }} mode=0644
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    tags:
      - install
      - nginx
      - lua

  - name: Copy Chronos overridden template file
    copy: src=chronos_overrides/templates/job_persistence_error.hbs dest={{ nginx_chronos_auth_templates_dir }} mode=0644
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx

  - name: Copy Chronos error file
    copy: src=errors/403.txt dest={{ nginx_chronos_auth_dir }}/403 mode=0644
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - error403

  - name: Copy basic auth credentials file to the nginx conf
    copy: src={{ creds_dir }}/{{nginx_basic_auth_file_name}} dest="{{nginx_conf_dir}}/{{nginx_basic_auth_file_name}}"  mode=0644
    when: auth_permissions_gspreadsheets is defined and not(auth_permissions_gspreadsheets | trim == '') and
          generate_basic_auth_file is defined and generate_basic_auth_file|bool
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Copy permissions file from local src to nginx conf when nginx_auth_permissions_local_path is defined
    when: nginx_auth_enable is defined and nginx_auth_enable|bool and
          nginx_auth_permissions_local_path is defined and not(nginx_auth_permissions_local_path | trim == '')
    copy:  src="{{ nginx_auth_permissions_local_path }}"  dest="{{nginx_conf_dir}}/permissions.yml" owner=root group=root mode=0644
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Copy default nginx user-permissions.json file if neither nginx_auth_permissions_local_path nor auth_permissions_gspreadsheets are defined, and there isn't already a permissions file
    when: nginx_auth_enable is defined and nginx_auth_enable|bool and
          nginx_auth_permissions_local_path is not defined and
          auth_permissions_gspreadsheets is not defined
    copy: src={{ role_path }}/files/permissions.yml dest="{{nginx_conf_dir}}/permissions.yml" owner=root group=root mode=0644
          force=no # ensure that this file doesn't overwrite any existing permissions file
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Do a pip install passlib (for aaad htpasswd check during authentication)
    pip: name=passlib
    become: yes
    notify: restart aaad
    tags:
      - install
      - aaad

  - name: Copy AAA daemon to nginx conf directory for now
    copy: src=../../../../aaad dest={{nginx_conf_dir}}  mode=0655
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - update
      - aaad

  - name: Configure aaad upstart job
    template: src=aaad.conf.upstart.j2 dest=/etc/init/aaad.conf owner=root group=root mode=0644
    become: yes
    notify: restart aaad
    tags:
      - nginx
      - aaad

  - name: create directory to put different sites config
    file: path="{{nginx_conf_dir}}/sites-available" state=directory
    become: yes
    tags:
      - install
      - nginx

  - name: create a directory to hold symlink to the default site config
    file: path="{{nginx_conf_dir}}/sites-enabled"   state=directory
    become: yes
    tags:
      - install
      - nginx

  - name: copy proxy config to sites-available
    template: src={{ item }}.j2 dest="{{nginx_conf_dir}}/sites-available/{{ item }}" mode=0644
    with_items:
      - rogeros_auth_proxy.conf
      - auth_location.conf
      - login_locations.conf
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - configuration
      - proxy-config

  - name: symlink proxy config to default site
    file: src="{{nginx_conf_dir}}/sites-available/rogeros_auth_proxy.conf" dest="{{nginx_conf_dir}}/sites-enabled/default" state=link
    become: yes
    when: not ansible_check_mode
    tags:
      - install
      - nginx

  - name: symlink nginx certificate key file
    file: src="{{ certs_dir }}/ssl.in.key" dest="{{nginx_certs_dir}}/nginx.in.key" state=link
    become: yes
    when: not ansible_check_mode
    tags:
      - install
      - nginx

  - name: symlink nginx certificate file
    file: src="{{ certs_dir }}/ssl.in.crt" dest="{{nginx_certs_dir}}/nginx.in.crt" state=link
    become: yes
    when: not ansible_check_mode
    tags:
      - install
      - nginx

  - name: copy nginx conf file
    template: src=nginx.conf.j2 dest={{nginx_conf_dir}}/nginx.conf  mode=0644
    become: yes
    tags:
      - install
      - nginx

  - name: Configure Nginx upstart job
    template: src=nginx.conf.upstart.j2 dest=/etc/init/nginx.conf owner=root group=root mode=0644
    become: yes
    notify: restart nginx
    tags:
      - nginx

  - name: Remove Chronos Auth directory under Nginx when nginx_auth_enable is false
    when: nginx_auth_enable is not defined or not nginx_auth_enable|bool
    file: path="{{ nginx_chronos_auth_dir }}" state=absent
    become: yes
    tags:
      - nginx

  - name: Remove Auth Lua Script when nginx_auth_enable is false
    when: nginx_auth_enable is not defined or not nginx_auth_enable|bool
    file: path="{{ nginx_auth_script_dir }}/auth_request.lua" state=absent
    become: yes
    tags:
      - nginx
      - lua

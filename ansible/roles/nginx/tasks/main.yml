---
  - name: Remove any existing NGINX under "/usr/local"
    file: path="{{ nginx_previous_version_dir }}" state=absent
    become: yes
    tags:
      - nginx

  - name: Download openresty/nginx bundle
    get_url: url="{{nginx_release_url}}" dest="{{tmp_dir}}"
    become: yes
    tags:
      - install
      - nginx

  - name: Untar nginx package
    unarchive: copy=no dest="{{tmp_dir}}" src="{{tmp_dir}}/{{nginx_pkg_tar}}"
    become: yes
    tags:
      - install
      - nginx

  - name: Install nginx dependencies
    apt: name={{ item }} state=present
    with_items: "{{ nginx_package_deps }}"
    become: yes
    tags:
      - packages
      - nginx

  - name: configure and install nginx and modules
    command: chdir={{tmp_dir}}/{{nginx_pkg}} {{item}}
    with_items:
      - ./configure --with-http_auth_request_module --with-stream --with-stream_ssl_module --with-http_sub_module
      - make
      - make install
    become: yes
    tags:
      - install
      - nginx

  - name: Create directories which need to exist if necessary
    file: path={{ item }} state=directory owner=root
    with_items:
      - "{{ nginx_conf_dir }}"
      - "{{ nginx_certs_dir }}"
      - "{{ nginx_chronos_auth_dir }}"
      - "{{ nginx_chronos_auth_views_dir }}"
      - "{{ nginx_chronos_auth_templates_dir }}"
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    tags:
      - install
      - nginx
      - login

  - name: Remove login pages (this was used in the past)
    file: path={{ nginx_auth_login_dir }} state=absent
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - login

  - name: Synchronize Chronos overridden view files
    synchronize: src=chronos_overrides/views/ dest={{ nginx_chronos_auth_views_dir }} recursive=yes delete=yes
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx

  - name: Copy Lua Auth Script file
    copy: src=../files/auth_request.lua dest={{ nginx_auth_script_dir }} mode=0644
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - lua
      - proxy-config

  - name: Copy Lua Auth and Filter Response Script file
    copy: src=../files/auth_request_and_filter_response.lua dest={{ nginx_auth_script_dir }} mode=0644
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - lua
      - proxy-config

  - name: Copy Chronos overridden template file
    copy: src=chronos_overrides/templates/job_persistence_error.hbs dest={{ nginx_chronos_auth_templates_dir }} mode=0644
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx

  - name: Copy Chronos error file
    copy: src=errors/403.txt dest={{ nginx_chronos_auth_dir }}/403 mode=0644
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - error403

  - name: Copy basic auth credentials file to the nginx conf
    copy: src={{ creds_dir }}/{{nginx_basic_auth_file_name}} dest="{{nginx_conf_dir}}/{{nginx_basic_auth_file_name}}"  mode=0644
    when: generate_basic_auth_file is defined and generate_basic_auth_file|bool
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Copy quota file to the nginx conf
    copy: src={{ nginx_auth_local_dir }}/quotas_{{ env }}.yml dest="{{nginx_conf_dir}}/quotas.yml"  mode=0644
    when: nginx_auth_enable is defined and nginx_auth_enable|bool
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - permissions-sync
      - aaad

  - name: Copy permissions file from local src to nginx conf when nginx_auth_local_dir is defined
    when: nginx_auth_enable is defined and nginx_auth_enable|bool and nginx_auth_local_dir is defined and not(nginx_auth_local_dir | trim == '')
    copy:  src="{{ nginx_auth_local_dir }}/permissions.yml"  dest="{{nginx_conf_dir}}/permissions.yml" owner=root group=root mode=0644
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Copy permissions file of test users from local src to nginx conf when nginx_auth_local_dir is defined
    when: nginx_auth_enable is defined and nginx_auth_enable|bool and nginx_auth_local_dir is defined and not(nginx_auth_local_dir | trim == '') and nginx_set_test_users|bool
    copy:  src="{{ nginx_auth_local_dir }}/permissions_local.yml"  dest="{{nginx_conf_dir}}/permissions_test_users.yml" owner=root group=root mode=0644
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Copy default nginx user-permissions.json file if nginx_auth_local_dir is not defined, and there isn't already a permissions file
    when: nginx_auth_enable is defined and nginx_auth_enable|bool and
          nginx_auth_local_dir is not defined
    copy: src={{ role_path }}/files/permissions.yml dest="{{nginx_conf_dir}}/permissions.yml" owner=root group=root mode=0644
          force=no # ensure that this file doesn't overwrite any existing permissions file
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - permissions-sync

  - name: Do a pip uninstall passlib (may have been added before for aaad htpasswd check during authentication)
    pip: name=passlib state=absent
    become: yes
    notify: restart aaad
    tags:
      - install
      - aaad

  - name: Synchronize AAA daemon to nginx conf directory for now
    synchronize:
      src: "{{ role_path }}/../../../aaad/"
      dest: "{{nginx_conf_dir}}/aaad/"
      recursive: yes
      delete: yes
      rsync_opts:
            - "--exclude=/venv/"
            - "--exclude=*.pyc"
            - "--exclude=SET-ENV.sh"
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - update
      - aaad
      - aaadsync

  - name: Template AAAD environment specific files file to nginx conf directory for now
    template: src="{{item}}.j2" dest="{{nginx_conf_dir}}/aaad/static/{{item}}" owner=root group=root mode=0644
    with_items:
      - "aaad-vars.css"
    become: yes
    notify: restart aaad
    tags:
      - install
      - nginx
      - update
      - aaad

  - name: Update env name in aaad-js file
    lineinfile: dest="{{nginx_conf_dir}}/aaad/static/aaad-ui.js" regexp="^\$env_name = " line="$env_name = '{{ env_name }}'"
    when: ansible_check_mode is not defined or not ansible_check_mode
    become: yes
    tags:
      - install
      - nginx
      - update
      - aaad

  - name: Update aaad cookie name in aaad-js file
    lineinfile: dest="{{nginx_conf_dir}}/aaad/static/aaad-ui.js" regexp="^\$actas_cookie_name = " line="$actas_cookie_name = '{{ actas_cookie_name }}'"
    when: actas_cookie_name is defined
    become: yes
    tags:
      - install
      - nginx
      - update
      - aaad

  - name: Do a pip install virtualenv
    pip: name=virtualenv
    become: yes
    tags:
      - install
      - aaad

  - name: Set up virtualenv and install requirements for aaad
    pip:
      requirements: "{{nginx_conf_dir}}/aaad/requirements.txt"
      virtualenv: "{{nginx_conf_dir}}/aaad/venv"
      virtualenv_python: python2.7
    become: yes
    notify: restart aaad
    tags:
      - aaad

  - name: Configure aaad upstart job
    template: src=aaad.conf.upstart.j2 dest=/etc/init/aaad.conf owner=root group=root mode=0644
    become: yes
    notify: restart aaad
    tags:
      - nginx
      - aaad

  - name: create directory to put different sites config
    file: path="{{nginx_conf_dir}}/sites-available" state=directory
    become: yes
    tags:
      - install
      - nginx

  - name: create a directory to hold symlink to the default site config
    file: path="{{nginx_conf_dir}}/sites-enabled"   state=directory
    become: yes
    tags:
      - install
      - nginx

  - name: copy proxy config to sites-available
    template: src={{ item }}.j2 dest="{{nginx_conf_dir}}/sites-available/{{ item }}" mode=0644
    with_items:
      - rogeros_auth_proxy.conf
      - auth_location.conf
      - login_locations.conf
    become: yes
    notify: restart nginx
    tags:
      - install
      - nginx
      - configuration
      - proxy-config

  - name: symlink proxy config to default site
    file: src="{{nginx_conf_dir}}/sites-available/rogeros_auth_proxy.conf" dest="{{nginx_conf_dir}}/sites-enabled/default" state=link
    become: yes
    when: ansible_check_mode is not defined or not ansible_check_mode
    tags:
      - install
      - nginx

  - name: create self-signed SSL cert
    command: openssl req -new -nodes -x509 -subj "/C=US/ST=Washington/L=Seattle/O=IT/CN=${ansible_fqdn}"
      -days 365 -keyout "{{ certs_dir }}/ssl.in.key" -out "{{ certs_dir }}/ssl.in.crt" -extensions v3_ca creates="{{ certs_dir }}/ssl.in.crt"
    become: yes
    when: gen_self_signed_cert is defined and gen_self_signed_cert|bool
    tags:
      - install
      - nginx
      - self-signed-ssl-cert

  - name: symlink nginx certificate key file
    file: src="{{ certs_dir }}/ssl.in.key" dest="{{nginx_certs_dir}}/nginx.in.key" state=link
    become: yes
    when: ansible_check_mode is not defined or not ansible_check_mode
    tags:
      - install
      - nginx

  - name: symlink nginx certificate file
    file: src="{{ certs_dir }}/ssl.in.crt" dest="{{nginx_certs_dir}}/nginx.in.crt" state=link
    become: yes
    when: ansible_check_mode is not defined or not ansible_check_mode
    tags:
      - install
      - nginx

  - name: copy nginx conf file
    template: src=nginx.conf.j2 dest={{nginx_conf_dir}}/nginx.conf  mode=0644
    become: yes
    tags:
      - install
      - nginx

  - name: Configure Nginx upstart job
    template: src=nginx.conf.upstart.j2 dest=/etc/init/nginx.conf owner=root group=root mode=0644
    become: yes
    notify: restart nginx
    tags:
      - nginx

  - name: Remove Chronos Auth directory under Nginx when nginx_auth_enable is false
    when: nginx_auth_enable is not defined or not nginx_auth_enable|bool
    file: path="{{ nginx_chronos_auth_dir }}" state=absent
    become: yes
    tags:
      - nginx

  - name: Remove Auth Lua Script when nginx_auth_enable is false
    when: nginx_auth_enable is not defined or not nginx_auth_enable|bool
    file: path="{{ nginx_auth_script_dir }}/auth_request.lua" state=absent
    become: yes
    tags:
      - nginx
      - lua

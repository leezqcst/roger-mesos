# another virtual host using mix of IP-, name-, and port-based configuration
#
upstream marathon {
        server localhost:8080;
}

upstream chronos {
        server localhost:4400;
}

server {
        listen {{nginx_proxy_port}};
        server_name server.alias;
        root html;
        index index.html index.htm;

        location /marathon/ping {
                 auth_basic Off;
                 proxy_pass http://marathon/ping;
        }

        location /marathon/ {
		# goes to another method if basic http auth fails
		# in our case, it will always go to the aaadaemon
		# because http credential files is empty
		satisfy all;
		auth_basic "Restricted";
		auth_basic_user_file {{nginx_conf_dir}}/{{nginx_basic_auth_file_name}};
		auth_request /auth-proxy;
                proxy_pass http://marathon/;
                add_header act-as-user $http_x_upstream_act_as_user;
		proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Scheme $scheme;
                proxy_set_header Authorization $http_authorization;
                proxy_pass_header Authorization;
        }

        location /chronos/ping {
                 auth_basic Off;
                 proxy_pass http://chronos/ping;
        }

        location /chronos/ {
		satisfy all;
		auth_basic "Restricted";
		auth_basic_user_file {{nginx_conf_dir}}/{{nginx_basic_auth_file_name}};
		auth_request /auth-proxy;
		proxy_pass http://chronos/;
		proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Scheme $scheme;
                add_header act-as-user $http_x_upstream_act_as_user;
                proxy_set_header Authorization $http_authorization;
                proxy_pass_header Authorization;
        }

	location = /auth-proxy {
                proxy_pass http://localhost:{{nginx_aaad_port}};
                proxy_set_header URI $request_uri;
                proxy_set_header method $request_method;
                proxy_pass_request_headers on;
	}

}
